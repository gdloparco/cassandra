{
  "version": 3,
  "sources": ["../../svelte-typewriter/package/modes/loopOnce.js"],
  "sourcesContent": ["import { animationSetup } from '../helpers/animationSetup'\nimport { writeEffect } from '../helpers/writeEffect'\nimport { typingInterval } from '../helpers/typingInterval'\nimport { unwriteEffect } from '../helpers/unwriteEffect'\nimport { runOnEveryParentUntil } from '../helpers/runOnEveryParentUntil'\n\n/**\n * @typedef {object} Props\n * @property {number} [interval]\n * @property {boolean} [cursor]\n * @property {boolean} [keepCursorOnFinish]\n * @property {number} [delay]\n * @property {boolean} [showCursorOnDelay]\n * @property {boolean} [disabled]\n * @property {string} [element]\n * @property {number} [scrambleDuration]\n * @property {number} [scrambleSlowdown]\n * @property {number} [unwriteInterval]\n * @property {number} [wordInterval]\n */\n\n/**\n * @typedef {{ update: () => void, destroy: () => void }} SvelteActionReturnType\n */\n\n/**\n * @typedef {(node: HTMLElement, props: Props) => SvelteActionReturnType} TypewriterModeFn\n */\n\n/**\n * @type {TypewriterModeFn}\n */\nconst loopOnce = async (node, props) => {\n\tconst { options, elements } = animationSetup(node, props)\n\n\tfor (const element of elements) {\n\t\tconst { currentNode, text } = element\n\n\t\tawait writeEffect(element, options)\n\t\tconst textWithUnescapedAmpersands = text.replaceAll('&', '&amp;')\n\n\t\tconst fullyWritten = currentNode.innerHTML === textWithUnescapedAmpersands\n\n\t\tif (fullyWritten) {\n\t\t\toptions.dispatch('done')\n\t\t\tawait typingInterval(options.wordInterval)\n\n\t\t\tconst isLastElement = elements.indexOf(element) === elements.length - 1\n\n\t\t\tif (!isLastElement) {\n\t\t\t\tawait unwriteEffect(currentNode, options)\n\t\t\t\trunOnEveryParentUntil(currentNode, options.parentElement, element => {\n\t\t\t\t\tcurrentNode === element\n\t\t\t\t\t\t? element.classList.remove('typing')\n\t\t\t\t\t\t: element.classList.remove('finished-typing')\n\t\t\t\t})\n\t\t\t}\n\n\t\t\trunOnEveryParentUntil(currentNode, options.parentElement, element => {\n\t\t\t\tconst cursorHasTimeout = typeof options.keepCursorOnFinish === 'number'\n\t\t\t\tcursorHasTimeout &&\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\telement.classList.replace('typing', 'finished-typing')\n\t\t\t\t\t}, options.keepCursorOnFinish)\n\t\t\t})\n\t\t}\n\t}\n\n\treturn {\n\t\tupdate() {},\n\t\tdestroy() {}\n\t}\n}\n\nexport default loopOnce\n"],
  "mappings": ";;;;;;;;;;;;;AAgCA,IAAM,WAAW,OAAO,MAAM,UAAU;AACvC,QAAM,EAAE,SAAS,SAAS,IAAI,eAAe,MAAM,KAAK;AAExD,aAAW,WAAW,UAAU;AAC/B,UAAM,EAAE,aAAa,KAAK,IAAI;AAE9B,UAAM,YAAY,SAAS,OAAO;AAClC,UAAM,8BAA8B,KAAK,WAAW,KAAK,OAAO;AAEhE,UAAM,eAAe,YAAY,cAAc;AAE/C,QAAI,cAAc;AACjB,cAAQ,SAAS,MAAM;AACvB,YAAM,eAAe,QAAQ,YAAY;AAEzC,YAAM,gBAAgB,SAAS,QAAQ,OAAO,MAAM,SAAS,SAAS;AAEtE,UAAI,CAAC,eAAe;AACnB,cAAM,cAAc,aAAa,OAAO;AACxC,8BAAsB,aAAa,QAAQ,eAAe,CAAAA,aAAW;AACpE,0BAAgBA,WACbA,SAAQ,UAAU,OAAO,QAAQ,IACjCA,SAAQ,UAAU,OAAO,iBAAiB;AAAA,QAC9C,CAAC;AAAA,MACF;AAEA,4BAAsB,aAAa,QAAQ,eAAe,CAAAA,aAAW;AACpE,cAAM,mBAAmB,OAAO,QAAQ,uBAAuB;AAC/D,4BACC,WAAW,MAAM;AAChB,UAAAA,SAAQ,UAAU,QAAQ,UAAU,iBAAiB;AAAA,QACtD,GAAG,QAAQ,kBAAkB;AAAA,MAC/B,CAAC;AAAA,IACF;AAAA,EACD;AAEA,SAAO;AAAA,IACN,SAAS;AAAA,IAAC;AAAA,IACV,UAAU;AAAA,IAAC;AAAA,EACZ;AACD;AAEA,IAAO,mBAAQ;",
  "names": ["element"]
}
