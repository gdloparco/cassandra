{
  "version": 3,
  "sources": ["../../svelte-typewriter/package/helpers/typingInterval.js", "../../svelte-typewriter/package/helpers/writeEffect.js"],
  "sourcesContent": ["import { sleep } from './sleep'\nimport { rng } from './rng'\n\n/** @type {import(types').TypingInterval} */\nconst typingInterval = async interval =>\n\tsleep(Array.isArray(interval) ? interval[rng(0, interval.length)] : interval)\n\nexport { typingInterval }\n", "import { typingInterval } from './typingInterval'\nimport { runOnEveryParentUntil } from '../helpers/runOnEveryParentUntil'\n\n/** @type {import(types').TypewriterEffectFn} */\nconst writeEffect = async ({ currentNode, text }, options) => {\n\trunOnEveryParentUntil(currentNode, options.parentElement, element => {\n\t\tconst classToAdd = currentNode === element ? 'typing' : 'finished-typing'\n\t\telement.classList.add(classToAdd)\n\t})\n\n\tconst segmenter = new Intl.Segmenter('en', { granularity: 'grapheme' })\n\tconst segmentedText = [...segmenter.segment(text)]\n\n\tlet pendingClosingBracket = false\n\n\tfor (const { segment: letter, index } of segmentedText) {\n\t\tif (letter === '>') {\n\t\t\tpendingClosingBracket = false\n\t\t\tcontinue\n\t\t} else if (letter === '<') {\n\t\t\tpendingClosingBracket = true\n\t\t\tcontinue\n\t\t} else if (pendingClosingBracket) {\n\t\t\tcontinue\n\t\t}\n\n\t\tcurrentNode.innerHTML = text.slice(0, index)\n\t\tawait typingInterval(options.interval)\n\t}\n\n\tcurrentNode.innerHTML = text\n}\n\nexport { writeEffect }\n"],
  "mappings": ";;;;;;;AAIA,IAAM,iBAAiB,OAAM,aAC5B,MAAM,MAAM,QAAQ,QAAQ,IAAI,SAAS,IAAI,GAAG,SAAS,MAAM,CAAC,IAAI,QAAQ;;;ACD7E,IAAM,cAAc,OAAO,EAAE,aAAa,KAAK,GAAG,YAAY;AAC7D,wBAAsB,aAAa,QAAQ,eAAe,aAAW;AACpE,UAAM,aAAa,gBAAgB,UAAU,WAAW;AACxD,YAAQ,UAAU,IAAI,UAAU;AAAA,EACjC,CAAC;AAED,QAAM,YAAY,IAAI,KAAK,UAAU,MAAM,EAAE,aAAa,WAAW,CAAC;AACtE,QAAM,gBAAgB,CAAC,GAAG,UAAU,QAAQ,IAAI,CAAC;AAEjD,MAAI,wBAAwB;AAE5B,aAAW,EAAE,SAAS,QAAQ,MAAM,KAAK,eAAe;AACvD,QAAI,WAAW,KAAK;AACnB,8BAAwB;AACxB;AAAA,IACD,WAAW,WAAW,KAAK;AAC1B,8BAAwB;AACxB;AAAA,IACD,WAAW,uBAAuB;AACjC;AAAA,IACD;AAEA,gBAAY,YAAY,KAAK,MAAM,GAAG,KAAK;AAC3C,UAAM,eAAe,QAAQ,QAAQ;AAAA,EACtC;AAEA,cAAY,YAAY;AACzB;",
  "names": []
}
